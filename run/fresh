#!/bin/bash
set -euxo pipefail

# This script is used to build the whole project from scratch
# `run/fresh` uses `npm ci`
# `run/fresh install` uses `npm install`
# `run/fresh reinstall` deletes lockfiles and then uses `npm install`

# `run/fresh offline` uses `npm ci` and skips rebuilding of treesitter grammars
#  you can then hope that your machine has cached docker containers
#  I needed this because I was on a train and couldn't download half a gig
#  for every build 

icmd=${1:-ci}

run/.impl/clean "$icmd"

run/.impl/start-local-npm


instFlags="--loglevel silent"
# instFlags="--loglevel silly"

if [[ "$icmd" = "reinstall" ]]
then
    run/.impl/unlock
    icmd="install"
fi

# Independent layer
if [[ "$icmd" = "offline" ]]
then
    icmd=ci
    (cd backend && npm $icmd $instFlags && npm run build-skip-grammar && npm publish)
    run/.impl/remove-local-integrity-hash
else
    (cd backend && npm $icmd $instFlags && npm run build && npm publish)
    run/.impl/remove-local-integrity-hash
fi

# Frontend layer
(cd frontend_codemirror && npm $icmd $instFlags && npm run build && npm publish)
run/.impl/remove-local-integrity-hash

# End to end layer
(cd test_benchmarks && npm $icmd $instFlags && npm run build)
(cd test_integration && npm $icmd $instFlags && npm run build)
(cd test_codemirror && npm $icmd $instFlags && npm run build && touch src/main.ts)
run/.impl/remove-local-integrity-hash

# run/.impl/stop-local-npm

run/.impl/notify